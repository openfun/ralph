apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ralph.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "ralph.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "ralph.selectorLabels" . | nindent 6 }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ralph.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            {{- toYaml .Values.lrs.command | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /__heartbeat__
              port: {{ .Values.lrs.port }}
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /__lbheartbeat__
              port: {{ .Values.lrs.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: RALPH_APP_DIR
              value: "/app/.ralph"
            - name: RALPH_AUTH_FILE
              value: "/var/run/ralph/auth.json"
            - name: RALPH_EXECUTION_ENVIRONMENT
              value: "{{ .Values.executionEnvironment }}"
            - name: RALPH_SENTRY_IGNORE_HEALTH_CHECKS
              value: "{{ .Values.sentryIgnoreHealthChecks }}"
          envFrom:
            - secretRef:
                name: {{ tpl .Values.envFromSecret . | quote }}
          volumeMounts:
            - name: {{ .Values.volumes.history.name }}
              mountPath: /app/.ralph
            {{- if .Values.elastic.mountCACert }}
            - name: es-ca-certificate
              mountPath: /usr/local/share/ca-certificates/
            {{- end }}
            - name: lrs-auth
              mountPath: /var/run/ralph/
      volumes:
        - name: {{ .Values.volumes.history.name }}
        {{- if .Values.volumes.history.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.volumes.history.existingClaim }}{{ .Values.volumes.history.existingClaim }}{{- else }}{{ .Values.volumes.history.claimName }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.elastic.mountCACert }}
        - name: es-ca-certificate
          secret:
            secretName: {{ .Values.elastic.caSecretName }}
        {{- end }}
        - name: lrs-auth
          secret:
            secretName: {{ .Values.lrs.authSecretName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
