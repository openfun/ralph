{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/xAPI/statements/":{"get":{"summary":"Get","description":"Read a single xAPI Statement or multiple xAPI Statements.\n\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#213-get-statements","operationId":"get_xAPI_statements__get","parameters":[{"description":"Id of Statement to fetch","required":false,"schema":{"type":"string","title":"Statementid","description":"Id of Statement to fetch"},"name":"statementId","in":"query"},{"description":"**Not implemented** Id of voided Statement to fetch","required":false,"schema":{"type":"string","title":"Voidedstatementid","description":"**Not implemented** Id of voided Statement to fetch"},"name":"voidedStatementId","in":"query"},{"description":"Filter, only return Statements for which the specified Agent or Group is the Actor or Object of the Statement","required":false,"schema":{"type":"string","format":"json-string","title":"Agent","description":"Filter, only return Statements for which the specified Agent or Group is the Actor or Object of the Statement"},"name":"agent","in":"query"},{"description":"Filter, only return Statements matching the specified Verb id","required":false,"schema":{"type":"string","title":"Verb","description":"Filter, only return Statements matching the specified Verb id"},"name":"verb","in":"query"},{"description":"Filter, only return Statements for which the Object of the Statement is an Activity with the specified id","required":false,"schema":{"type":"string","title":"Activity","description":"Filter, only return Statements for which the Object of the Statement is an Activity with the specified id"},"name":"activity","in":"query"},{"description":"**Not implemented** Filter, only return Statements matching the specified registration id","required":false,"schema":{"type":"string","format":"uuid","title":"Registration","description":"**Not implemented** Filter, only return Statements matching the specified registration id"},"name":"registration","in":"query"},{"description":"**Not implemented** Apply the Activity filter broadly. Include Statements for which the Object, any of the context Activities, or any of those properties in a contained SubStatement match the Activity parameter, instead of that parameter's normal behaviour","required":false,"schema":{"type":"boolean","title":"Related Activities","description":"**Not implemented** Apply the Activity filter broadly. Include Statements for which the Object, any of the context Activities, or any of those properties in a contained SubStatement match the Activity parameter, instead of that parameter's normal behaviour","default":false},"name":"related_activities","in":"query"},{"description":"**Not implemented** Apply the Agent filter broadly. Include Statements for which the Actor, Object, Authority, Instructor, Team, or any of these properties in a contained SubStatement match the Agent parameter, instead of that parameter's normal behaviour.","required":false,"schema":{"type":"boolean","title":"Related Agents","description":"**Not implemented** Apply the Agent filter broadly. Include Statements for which the Actor, Object, Authority, Instructor, Team, or any of these properties in a contained SubStatement match the Agent parameter, instead of that parameter's normal behaviour.","default":false},"name":"related_agents","in":"query"},{"description":"Only Statements stored since the specified Timestamp (exclusive) are returned","required":false,"schema":{"type":"string","format":"date-time","title":"Since","description":"Only Statements stored since the specified Timestamp (exclusive) are returned"},"name":"since","in":"query"},{"description":"Only Statements stored at or before the specified Timestamp are returned","required":false,"schema":{"type":"string","format":"date-time","title":"Until","description":"Only Statements stored at or before the specified Timestamp are returned"},"name":"until","in":"query"},{"description":"Maximum number of Statements to return. 0 indicates return the maximum the server will allow","required":false,"schema":{"type":"integer","title":"Limit","description":"Maximum number of Statements to return. 0 indicates return the maximum the server will allow","default":100},"name":"limit","in":"query"},{"description":"**Not implemented** If \"ids\", only include minimum information necessary in Agent, Activity, Verb and Group Objects to identify them. For Anonymous Groups this means including the minimum information needed to identify each member. If \"exact\", return Agent, Activity, Verb and Group Objects populated exactly as they were when the Statement was received. An LRS requesting Statements for the purpose of importing them would use a format of \"exact\" in order to maintain Statement Immutability. If \"canonical\", return Activity Objects and Verbs populated with the canonical definition of the Activity Objects and Display of the Verbs as determined by the LRS, after applying the language filtering process defined below, and return the original Agent and Group Objects as in \"exact\" mode.","required":false,"schema":{"type":"string","enum":["ids","exact","canonical"],"title":"Format","description":"**Not implemented** If \"ids\", only include minimum information necessary in Agent, Activity, Verb and Group Objects to identify them. For Anonymous Groups this means including the minimum information needed to identify each member. If \"exact\", return Agent, Activity, Verb and Group Objects populated exactly as they were when the Statement was received. An LRS requesting Statements for the purpose of importing them would use a format of \"exact\" in order to maintain Statement Immutability. If \"canonical\", return Activity Objects and Verbs populated with the canonical definition of the Activity Objects and Display of the Verbs as determined by the LRS, after applying the language filtering process defined below, and return the original Agent and Group Objects as in \"exact\" mode.","default":"exact"},"name":"format","in":"query"},{"description":"**Not implemented** If \"true\", the LRS uses the multipart response format and includes all attachments as described previously. If \"false\", the LRS sends the prescribed response with Content-Type application/json and does not send attachment data.","required":false,"schema":{"type":"boolean","title":"Attachments","description":"**Not implemented** If \"true\", the LRS uses the multipart response format and includes all attachments as described previously. If \"false\", the LRS sends the prescribed response with Content-Type application/json and does not send attachment data.","default":false},"name":"attachments","in":"query"},{"description":"If \"true\", return results in ascending order of stored time","required":false,"schema":{"type":"boolean","title":"Ascending","description":"If \"true\", return results in ascending order of stored time","default":false},"name":"ascending","in":"query"},{"description":"If \"true\", return only the results for which the authority matches the \"agent\" associated to the user that is making the query.","required":false,"schema":{"type":"boolean","title":"Mine","description":"If \"true\", return only the results for which the authority matches the \"agent\" associated to the user that is making the query.","default":false},"name":"mine","in":"query"},{"description":"Sorting data to allow pagination through large number of search results. NB: for internal use, not part of the LRS specification.","required":false,"schema":{"type":"string","title":"Search After","description":"Sorting data to allow pagination through large number of search results. NB: for internal use, not part of the LRS specification."},"name":"search_after","in":"query"},{"description":"Point-in-time ID to ensure consistency of search requests through multiple pages.NB: for internal use, not part of the LRS specification.","required":false,"schema":{"type":"string","title":"Pit Id","description":"Point-in-time ID to ensure consistency of search requests through multiple pages.NB: for internal use, not part of the LRS specification."},"name":"pit_id","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Xapi Statements  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBasic":[]},{"HTTPBasic":[]}]},"put":{"summary":"Put","description":"Store a single statement as a single member of a set.\n\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#211-put-statements","operationId":"put_xAPI_statements__put","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Statementid"},"name":"statementId","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LaxStatement"}}},"required":true},"responses":{"204":{"description":"Successful Response"},"400":{"description":"The request was invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetail"}}}},"409":{"description":"Statements had a conflict with existing statements.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetail"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBasic":[]},{"HTTPBasic":[]}]},"post":{"summary":"Post","description":"Store a set of statements (or a single statement as a single member of a set).\n\nNB: at this time, using POST to make a GET request, is not supported.\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#212-post-statements","operationId":"post_xAPI_statements__post","requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/LaxStatement"},{"items":{"$ref":"#/components/schemas/LaxStatement"},"type":"array"}],"title":"Statements"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{},"type":"array","title":"Response Post Xapi Statements  Post"}}}},"400":{"description":"The request was invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetail"}}}},"409":{"description":"Statements had a conflict with existing statements.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetail"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBasic":[]},{"HTTPBasic":[]}]}},"/xAPI/statements":{"get":{"summary":"Get","description":"Read a single xAPI Statement or multiple xAPI Statements.\n\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#213-get-statements","operationId":"get_xAPI_statements_get","parameters":[{"description":"Id of Statement to fetch","required":false,"schema":{"type":"string","title":"Statementid","description":"Id of Statement to fetch"},"name":"statementId","in":"query"},{"description":"**Not implemented** Id of voided Statement to fetch","required":false,"schema":{"type":"string","title":"Voidedstatementid","description":"**Not implemented** Id of voided Statement to fetch"},"name":"voidedStatementId","in":"query"},{"description":"Filter, only return Statements for which the specified Agent or Group is the Actor or Object of the Statement","required":false,"schema":{"type":"string","format":"json-string","title":"Agent","description":"Filter, only return Statements for which the specified Agent or Group is the Actor or Object of the Statement"},"name":"agent","in":"query"},{"description":"Filter, only return Statements matching the specified Verb id","required":false,"schema":{"type":"string","title":"Verb","description":"Filter, only return Statements matching the specified Verb id"},"name":"verb","in":"query"},{"description":"Filter, only return Statements for which the Object of the Statement is an Activity with the specified id","required":false,"schema":{"type":"string","title":"Activity","description":"Filter, only return Statements for which the Object of the Statement is an Activity with the specified id"},"name":"activity","in":"query"},{"description":"**Not implemented** Filter, only return Statements matching the specified registration id","required":false,"schema":{"type":"string","format":"uuid","title":"Registration","description":"**Not implemented** Filter, only return Statements matching the specified registration id"},"name":"registration","in":"query"},{"description":"**Not implemented** Apply the Activity filter broadly. Include Statements for which the Object, any of the context Activities, or any of those properties in a contained SubStatement match the Activity parameter, instead of that parameter's normal behaviour","required":false,"schema":{"type":"boolean","title":"Related Activities","description":"**Not implemented** Apply the Activity filter broadly. Include Statements for which the Object, any of the context Activities, or any of those properties in a contained SubStatement match the Activity parameter, instead of that parameter's normal behaviour","default":false},"name":"related_activities","in":"query"},{"description":"**Not implemented** Apply the Agent filter broadly. Include Statements for which the Actor, Object, Authority, Instructor, Team, or any of these properties in a contained SubStatement match the Agent parameter, instead of that parameter's normal behaviour.","required":false,"schema":{"type":"boolean","title":"Related Agents","description":"**Not implemented** Apply the Agent filter broadly. Include Statements for which the Actor, Object, Authority, Instructor, Team, or any of these properties in a contained SubStatement match the Agent parameter, instead of that parameter's normal behaviour.","default":false},"name":"related_agents","in":"query"},{"description":"Only Statements stored since the specified Timestamp (exclusive) are returned","required":false,"schema":{"type":"string","format":"date-time","title":"Since","description":"Only Statements stored since the specified Timestamp (exclusive) are returned"},"name":"since","in":"query"},{"description":"Only Statements stored at or before the specified Timestamp are returned","required":false,"schema":{"type":"string","format":"date-time","title":"Until","description":"Only Statements stored at or before the specified Timestamp are returned"},"name":"until","in":"query"},{"description":"Maximum number of Statements to return. 0 indicates return the maximum the server will allow","required":false,"schema":{"type":"integer","title":"Limit","description":"Maximum number of Statements to return. 0 indicates return the maximum the server will allow","default":100},"name":"limit","in":"query"},{"description":"**Not implemented** If \"ids\", only include minimum information necessary in Agent, Activity, Verb and Group Objects to identify them. For Anonymous Groups this means including the minimum information needed to identify each member. If \"exact\", return Agent, Activity, Verb and Group Objects populated exactly as they were when the Statement was received. An LRS requesting Statements for the purpose of importing them would use a format of \"exact\" in order to maintain Statement Immutability. If \"canonical\", return Activity Objects and Verbs populated with the canonical definition of the Activity Objects and Display of the Verbs as determined by the LRS, after applying the language filtering process defined below, and return the original Agent and Group Objects as in \"exact\" mode.","required":false,"schema":{"type":"string","enum":["ids","exact","canonical"],"title":"Format","description":"**Not implemented** If \"ids\", only include minimum information necessary in Agent, Activity, Verb and Group Objects to identify them. For Anonymous Groups this means including the minimum information needed to identify each member. If \"exact\", return Agent, Activity, Verb and Group Objects populated exactly as they were when the Statement was received. An LRS requesting Statements for the purpose of importing them would use a format of \"exact\" in order to maintain Statement Immutability. If \"canonical\", return Activity Objects and Verbs populated with the canonical definition of the Activity Objects and Display of the Verbs as determined by the LRS, after applying the language filtering process defined below, and return the original Agent and Group Objects as in \"exact\" mode.","default":"exact"},"name":"format","in":"query"},{"description":"**Not implemented** If \"true\", the LRS uses the multipart response format and includes all attachments as described previously. If \"false\", the LRS sends the prescribed response with Content-Type application/json and does not send attachment data.","required":false,"schema":{"type":"boolean","title":"Attachments","description":"**Not implemented** If \"true\", the LRS uses the multipart response format and includes all attachments as described previously. If \"false\", the LRS sends the prescribed response with Content-Type application/json and does not send attachment data.","default":false},"name":"attachments","in":"query"},{"description":"If \"true\", return results in ascending order of stored time","required":false,"schema":{"type":"boolean","title":"Ascending","description":"If \"true\", return results in ascending order of stored time","default":false},"name":"ascending","in":"query"},{"description":"If \"true\", return only the results for which the authority matches the \"agent\" associated to the user that is making the query.","required":false,"schema":{"type":"boolean","title":"Mine","description":"If \"true\", return only the results for which the authority matches the \"agent\" associated to the user that is making the query.","default":false},"name":"mine","in":"query"},{"description":"Sorting data to allow pagination through large number of search results. NB: for internal use, not part of the LRS specification.","required":false,"schema":{"type":"string","title":"Search After","description":"Sorting data to allow pagination through large number of search results. NB: for internal use, not part of the LRS specification."},"name":"search_after","in":"query"},{"description":"Point-in-time ID to ensure consistency of search requests through multiple pages.NB: for internal use, not part of the LRS specification.","required":false,"schema":{"type":"string","title":"Pit Id","description":"Point-in-time ID to ensure consistency of search requests through multiple pages.NB: for internal use, not part of the LRS specification."},"name":"pit_id","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Get Xapi Statements Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBasic":[]},{"HTTPBasic":[]}]},"put":{"summary":"Put","description":"Store a single statement as a single member of a set.\n\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#211-put-statements","operationId":"put_xAPI_statements_put","parameters":[{"required":true,"schema":{"type":"string","format":"uuid","title":"Statementid"},"name":"statementId","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LaxStatement"}}},"required":true},"responses":{"204":{"description":"Successful Response"},"400":{"description":"The request was invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetail"}}}},"409":{"description":"Statements had a conflict with existing statements.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetail"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBasic":[]},{"HTTPBasic":[]}]},"post":{"summary":"Post","description":"Store a set of statements (or a single statement as a single member of a set).\n\nNB: at this time, using POST to make a GET request, is not supported.\nLRS Specification:\nhttps://github.com/adlnet/xAPI-Spec/blob/1.0.3/xAPI-Communication.md#212-post-statements","operationId":"post_xAPI_statements_post","requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/LaxStatement"},{"items":{"$ref":"#/components/schemas/LaxStatement"},"type":"array"}],"title":"Statements"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{},"type":"array","title":"Response Post Xapi Statements Post"}}}},"400":{"description":"The request was invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetail"}}}},"409":{"description":"Statements had a conflict with existing statements.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorDetail"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBasic":[]},{"HTTPBasic":[]}]}},"/__lbheartbeat__":{"get":{"summary":"Lbheartbeat","description":"Load balancer heartbeat.\n\nReturn a 200 when the server is running.","operationId":"lbheartbeat___lbheartbeat___get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/__heartbeat__":{"get":{"summary":"Heartbeat","description":"Application heartbeat.\n\nReturn a 200 if all checks are successful.","operationId":"heartbeat___heartbeat___get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/whoami":{"get":{"summary":"Whoami","description":"Return the current user's username along with their scopes.","operationId":"whoami_whoami_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Whoami Whoami Get"}}}}},"security":[{"HTTPBasic":[]}]}}},"components":{"schemas":{"BaseXapiAccount":{"properties":{"homePage":{"type":"string","title":"Homepage"},"name":{"type":"string","title":"Name"}},"additionalProperties":false,"type":"object","required":["homePage","name"],"title":"BaseXapiAccount","description":"Pydantic model for IFI `account` property.\n\nAttributes:\n    homePage (IRI): Consists of the home page of the account's service provider.\n    name (str): Consists of the unique id or name of the Actor's account."},"BaseXapiAgentWithAccount":{"properties":{"account":{"$ref":"#/components/schemas/BaseXapiAccount"},"objectType":{"type":"string","enum":["Agent"],"title":"Objecttype"},"name":{"type":"string","title":"Name"}},"additionalProperties":false,"type":"object","required":["account"],"title":"BaseXapiAgentWithAccount","description":"Pydantic model for `Agent` type property.\n\nIt is defined for agent type with an account IFI."},"BaseXapiAgentWithMbox":{"properties":{"mbox":{"type":"string","title":"Mbox"},"objectType":{"type":"string","enum":["Agent"],"title":"Objecttype"},"name":{"type":"string","title":"Name"}},"additionalProperties":false,"type":"object","required":["mbox"],"title":"BaseXapiAgentWithMbox","description":"Pydantic model for `Agent` type property.\n\nIt is defined for agent type with a mailto IFI."},"BaseXapiAgentWithMboxSha1Sum":{"properties":{"mbox_sha1sum":{"type":"string","pattern":"^[0-9a-f]{40}$","title":"Mbox Sha1Sum"},"objectType":{"type":"string","enum":["Agent"],"title":"Objecttype"},"name":{"type":"string","title":"Name"}},"additionalProperties":false,"type":"object","required":["mbox_sha1sum"],"title":"BaseXapiAgentWithMboxSha1Sum","description":"Pydantic model for `Agent` type property.\n\nIt is defined for agent type with a hash IFI."},"BaseXapiAgentWithOpenId":{"properties":{"openid":{"type":"string","maxLength":65536,"minLength":1,"format":"uri","title":"Openid"},"objectType":{"type":"string","enum":["Agent"],"title":"Objecttype"},"name":{"type":"string","title":"Name"}},"additionalProperties":false,"type":"object","required":["openid"],"title":"BaseXapiAgentWithOpenId","description":"Pydantic model for `Agent` type property.\n\nIt is defined for agent type with an openID IFI."},"BaseXapiAnonymousGroup":{"properties":{"objectType":{"type":"string","enum":["Group"],"title":"Objecttype"},"name":{"type":"string","title":"Name"},"member":{"items":{"anyOf":[{"$ref":"#/components/schemas/BaseXapiAgentWithMbox"},{"$ref":"#/components/schemas/BaseXapiAgentWithMboxSha1Sum"},{"$ref":"#/components/schemas/BaseXapiAgentWithOpenId"},{"$ref":"#/components/schemas/BaseXapiAgentWithAccount"}]},"type":"array","title":"Member"}},"additionalProperties":false,"type":"object","required":["objectType","member"],"title":"BaseXapiAnonymousGroup","description":"Pydantic model for `Group` type property.\n\nIt is defined for Anonymous Group type.\n\nAttributes:\n    member (list): Consist of a list of the members of this Group."},"BaseXapiIdentifiedGroupWithAccount":{"properties":{"account":{"$ref":"#/components/schemas/BaseXapiAccount"},"objectType":{"type":"string","enum":["Group"],"title":"Objecttype"},"name":{"type":"string","title":"Name"},"member":{"items":{"anyOf":[{"$ref":"#/components/schemas/BaseXapiAgentWithMbox"},{"$ref":"#/components/schemas/BaseXapiAgentWithMboxSha1Sum"},{"$ref":"#/components/schemas/BaseXapiAgentWithOpenId"},{"$ref":"#/components/schemas/BaseXapiAgentWithAccount"}]},"type":"array","title":"Member"}},"additionalProperties":false,"type":"object","required":["account","objectType"],"title":"BaseXapiIdentifiedGroupWithAccount","description":"Pydantic model for `Group` type property.\n\nIt is defined for group type with an account IFI."},"BaseXapiIdentifiedGroupWithMbox":{"properties":{"mbox":{"type":"string","title":"Mbox"},"objectType":{"type":"string","enum":["Group"],"title":"Objecttype"},"name":{"type":"string","title":"Name"},"member":{"items":{"anyOf":[{"$ref":"#/components/schemas/BaseXapiAgentWithMbox"},{"$ref":"#/components/schemas/BaseXapiAgentWithMboxSha1Sum"},{"$ref":"#/components/schemas/BaseXapiAgentWithOpenId"},{"$ref":"#/components/schemas/BaseXapiAgentWithAccount"}]},"type":"array","title":"Member"}},"additionalProperties":false,"type":"object","required":["mbox","objectType"],"title":"BaseXapiIdentifiedGroupWithMbox","description":"Pydantic model for `Group` type property.\n\nIt is defined for group type with a mailto IFI."},"BaseXapiIdentifiedGroupWithMboxSha1Sum":{"properties":{"mbox_sha1sum":{"type":"string","pattern":"^[0-9a-f]{40}$","title":"Mbox Sha1Sum"},"objectType":{"type":"string","enum":["Group"],"title":"Objecttype"},"name":{"type":"string","title":"Name"},"member":{"items":{"anyOf":[{"$ref":"#/components/schemas/BaseXapiAgentWithMbox"},{"$ref":"#/components/schemas/BaseXapiAgentWithMboxSha1Sum"},{"$ref":"#/components/schemas/BaseXapiAgentWithOpenId"},{"$ref":"#/components/schemas/BaseXapiAgentWithAccount"}]},"type":"array","title":"Member"}},"additionalProperties":false,"type":"object","required":["mbox_sha1sum","objectType"],"title":"BaseXapiIdentifiedGroupWithMboxSha1Sum","description":"Pydantic model for `Group` type property.\n\nIt is defined for group type with a hash IFI."},"BaseXapiIdentifiedGroupWithOpenId":{"properties":{"openid":{"type":"string","maxLength":65536,"minLength":1,"format":"uri","title":"Openid"},"objectType":{"type":"string","enum":["Group"],"title":"Objecttype"},"name":{"type":"string","title":"Name"},"member":{"items":{"anyOf":[{"$ref":"#/components/schemas/BaseXapiAgentWithMbox"},{"$ref":"#/components/schemas/BaseXapiAgentWithMboxSha1Sum"},{"$ref":"#/components/schemas/BaseXapiAgentWithOpenId"},{"$ref":"#/components/schemas/BaseXapiAgentWithAccount"}]},"type":"array","title":"Member"}},"additionalProperties":false,"type":"object","required":["openid","objectType"],"title":"BaseXapiIdentifiedGroupWithOpenId","description":"Pydantic model for `Group` type property.\n\nIt is defined for group type with an openID IFI."},"ErrorDetail":{"properties":{"detail":{"type":"string","title":"Detail"}},"type":"object","required":["detail"],"title":"ErrorDetail","description":"Pydantic model for errors raised detail.\n\nType for return value for errors raised in API endpoints.\nUseful for OpenAPI documentation generation."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LaxObjectField":{"properties":{"id":{"type":"string","maxLength":65536,"minLength":1,"format":"uri","title":"Id"}},"type":"object","required":["id"],"title":"LaxObjectField","description":"Pydantic model for lax `object` field.\n\nLightest definition of an object field compliant to the specification."},"LaxStatement":{"properties":{"actor":{"anyOf":[{"$ref":"#/components/schemas/BaseXapiAgentWithMbox"},{"$ref":"#/components/schemas/BaseXapiAgentWithMboxSha1Sum"},{"$ref":"#/components/schemas/BaseXapiAgentWithOpenId"},{"$ref":"#/components/schemas/BaseXapiAgentWithAccount"},{"$ref":"#/components/schemas/BaseXapiAnonymousGroup"},{"$ref":"#/components/schemas/BaseXapiIdentifiedGroupWithMbox"},{"$ref":"#/components/schemas/BaseXapiIdentifiedGroupWithMboxSha1Sum"},{"$ref":"#/components/schemas/BaseXapiIdentifiedGroupWithOpenId"},{"$ref":"#/components/schemas/BaseXapiIdentifiedGroupWithAccount"}],"title":"Actor"},"id":{"type":"string","format":"uuid","title":"Id"},"object":{"$ref":"#/components/schemas/LaxObjectField"},"verb":{"$ref":"#/components/schemas/LaxVerbField"}},"type":"object","required":["actor","object","verb"],"title":"LaxStatement","description":"Pydantic model for lax statement.\n\nIt accepts without validating all fields beyond the bare minimum required to\nqualify an object as an XAPI statement."},"LaxVerbField":{"properties":{"id":{"type":"string","maxLength":65536,"minLength":1,"format":"uri","title":"Id"}},"type":"object","required":["id"],"title":"LaxVerbField","description":"Pydantic model for lax `verb` field.\n\nLightest definition of a verb field compliant to the specification."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"HTTPBasic":{"type":"http","scheme":"basic"}}}}