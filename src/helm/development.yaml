# Default values for Ralph.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: fundocker/ralph
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}
podCommand:
    - "uvicorn"
    - "ralph.api:app"
    - "--proxy-headers"
    - "--log-config"
    - "/etc/ralph/logging-config.yaml"
    - "--host"
    - "0.0.0.0"
    - "--port"
    - "8080"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsGroup: 1000

service:
  type: ClusterIP
  port: 8080
  nodePort:
    http: nil

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

persistence:
  enabled: false
  storageClass: ""
  accessModes:
    - ReadWriteMany
  volumes:
    history:
      name: "ralph-history"
      claimName: "ralph-pvc-history"
      size: 2Gi
      mountPath: /app/.ralph

# Additional volumes on the output Deployment definition.
extraVolumes:
  - name: logging-config
    configMap:
      name: ralph-logging-config

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts:
  - name: logging-config
    mountPath: "/etc/ralph"
    readOnly: true

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: deployment
                operator: In
                values:
                  - "ralph-app"
          topologyKey: kubernetes.io/hostname

lrsConfigMap: "ralph-lrs-config"
lrs:
  appDir: "/app/.ralph"
  backend: "es"
  maxSearchHitsCount: 100
  converterNamespace: ""
  auth:
    file: "/var/run/ralph/auth.json"
    restrictByAuthority: false
    restrictByScope: false
    basic:
      enabled: true
      cacheMaxSize: 100
      cacheTTL: 3600
    oidc:
      enabled: false
      audience: "http://localhost:8100"
      issuerURI: "http://learning-analytics-playground_keycloak_1:8080/auth/realms/fun-mooc"
  sentry:
    enabled: false
    dsn: "https://fake@key.ingest.sentry.io/1234567"
    cliSampleRate: 0.1
    lrsSampleRate: 0.1
    ignoreHealthChecks: true

# Secret containing authentication for Ralph
lrsAuthSecret: "ralph-auth-secret"

# ConfigMap containing extra environment variables to configure Ralph
lrsEnvConfigMap: "ralph-env-cm"

# Secret containing environment variables to configure Ralph
lrsEnvSecret: "ralph-env-secret"

database:
  tls:
    enabled: true
    certificatesSecret: "data-lake-es-http-certs-public"
    certificatesMountPath: "/usr/local/share/ca-certificates/"

loggingConfigConfigMap: ralph-logging-config
loggingConfig:
  version: 1
  disable_existing_loggers: false
  formatters:
    default:
      "()": uvicorn.logging.DefaultFormatter
      fmt: "%(levelprefix)s %(message)s"
      use_colors:
    access:
      "()": uvicorn.logging.AccessFormatter
      fmt: '%(levelprefix)s %(client_addr)s - "%(request_line)s" %(status_code)s'
  handlers:
    default:
      formatter: default
      class: logging.StreamHandler
      stream: ext://sys.stderr
    access:
      formatter: access
      class: logging.StreamHandler
      stream: ext://sys.stdout
  loggers:
    uvicorn:
      handlers:
        - default
      level: INFO
      propagate: false
    uvicorn.error:
      level: INFO
    uvicorn.access:
      handlers:
        - access
      level: INFO
      propagate: false
    ralph:
      handlers:
        - default
      level: INFO
      propagate: false

cronjobs: []
# Ralph cronjob should define a name, a cronjob schedule, the schedule suspension 
# and a command to execute
#   - name: "daily-ldp-to-es"
#     schedule: "30 2 * * *"
#     suspend: false
#     command:
#       - ralph list --backend ldp --new |
#         xargs -I {} -n 1 bash -c "
#         ralph read --backend ldp {} |
#         gunzip |
#         ralph extract -p gelf |
#         ralph write \
#         --backend es"
