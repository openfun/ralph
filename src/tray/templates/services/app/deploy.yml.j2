apiVersion: v1
kind: Deployment
metadata:
  labels:
    app: ralph
    service: app
    version: "{{ ralph_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "ralph-app-{{ deployment_stamp }}"
  namespace: "{{ namespace_name }}"
spec:
  replicas: {{ ralph_app_replicas }}
  selector:
    matchLabels:
      app: ralph
      service: app
      type: server
      version: "{{ ralph_image_tag }}"
      deployment: "ralph-app-{{ deployment_stamp }}"
      deployment_stamp: "{{ deployment_stamp }}"
  template:
    metadata:
      labels:
        app: ralph
        service: app
        type: server
        version: "{{ ralph_image_tag }}"
        deployment: "ralph-app-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: deployment
                      operator: In
                      values:
                        - "ralph-app-{{ deployment_stamp }}"
                topologyKey: kubernetes.io/hostname
{% set image_pull_secret_name = ralph_image_pull_secret_name | default(default_image_pull_secret_name) %}
{% if image_pull_secret_name | length %}
      imagePullSecrets:
        - name: "{{ image_pull_secret_name }}"
{% endif %}
      containers:
        - name: ralph
          image: "{{ ralph_image_name }}:{{ ralph_image_tag }}"
          imagePullPolicy: Always
          command: {{ ralph_lrs_command }}
          livenessProbe:
            httpGet:
              path: /__heartbeat__
              port: {{ ralph_lrs_port }}
              httpHeaders:
                - name: Host
                  value: "{{ ralph_lrs_host }}"
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /__lbheartbeat__
              port: {{ ralph_lrs_port }}
              httpHeaders:
                - name: Host
                  value: "{{ ralph_lrs_host }}"
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: RALPH_APP_DIR
              value: "/app/.ralph"
            - name: RALPH_AUTH_FILE
              value: "/var/run/ralph/auth.json"
            - name: RALPH_SENTRY_IGNORE_HEALTH_CHECKS
              value: "{{ ralph_sentry_ignore_health_checks }}"
{% if ralph_mount_es_ca_secret %}
            - name: RALPH_BACKENDS__DATA__ES__CLIENT_OPTIONS__ca_certs
              value: "/usr/local/share/ca-certificates/es-cluster.pem"
{% endif %}
          envFrom:
            - secretRef:
                name: "{{ ralph_secret_name }}"
          volumeMounts:
            - name: ralph-v-history
              mountPath: /app/.ralph
{% if ralph_mount_es_ca_secret %}
            - name: es-ca-certificate
              mountPath: /usr/local/share/ca-certificates/
{% endif %}
            - name: lrs-auth
              mountPath: /var/run/ralph/
      volumes:
        - name: ralph-v-history
          persistentVolumeClaim:
            claimName: "{{ ralph_pvc_history_name }}"
{% if ralph_mount_es_ca_secret %}
        - name: es-ca-certificate
          secret:
            secretName: "{{ ralph_es_ca_secret_name }}"
{% endif %}
        - name: lrs-auth
          secret:
            secretName: "{{ ralph_lrs_auth_secret_name }}"
      securityContext:
        runAsUser: {{ container_uid }}
        runAsGroup: {{ container_gid }}
